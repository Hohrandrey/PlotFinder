# –æ—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã

import asyncio # –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
import sqlite3, os # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
import logging # –º–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from resource.commands.__routers import * # –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤
from aiogram import Dispatcher, Bot # –∏–º–ø–æ—Ä—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, –∫–ª–∞—Å—Å –¥–ª—è –±–æ—Ç–∞
from config import TOKEN # –∏–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞

bot = Bot(token=TOKEN) # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ bot —Å–æ —Å–≤–æ–∏–º —Ç–æ–∫–µ–Ω–æ–º
dp = Dispatcher() # –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤


# —Å–ø–∏—Å–æ–∫ –æ–±—â–∏—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤
dp.include_router(start_router) # –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç

# —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ –∞–¥–º–∏–Ω–∞
dp.include_router(user_management_router) # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
dp.include_router(plot_management) # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞–º–∏
dp.include_router(changing_personal_data) # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
dp.include_router(changing_first_name) # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
dp.include_router(changing_patronymic) # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Å—Ç–≤–∞
dp.include_router(changing_last_name) # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
dp.include_router(adding_and_removing_users) # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


# —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è


async def main(): # –°–æ–∑–¥–∞–Ω–∏–µ –≤ –∫–ª–∞—Å—Å–µ –æ–±—ä–µ–∫—Ç–∞ Bot –∏ –µ–≥–æ –∑–∞–ø—É—Å–∫
    await bot.delete_webhook(drop_pending_updates=True) # —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    await dp.start_polling(bot) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞


if __name__ == '__main__': # –∑–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã

    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "db/db/PlotFinder_db.db"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(db_path):
        print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {db_path}")
    else:
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            with sqlite3.connect(db_path) as conn:
                cursor = conn.cursor()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
                cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
                tables = cursor.fetchall()

                print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")

                # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
                print("\nüìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü:")
                for table in tables:
                    print(f" - {table[0]}")
        except sqlite3.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")

    logging.basicConfig(level=logging.INFO) # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: —É—Ä–æ–≤–µ–Ω—å INFO (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
    asyncio.run(main()) # –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ main() —Å –ø–æ–º–æ—â—å—é asyncio
